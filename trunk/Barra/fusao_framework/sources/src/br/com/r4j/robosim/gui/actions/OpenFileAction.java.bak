package br.com.r4j.robosim.gui.actions;

import java.util.*;
import java.util.List;
import java.io.*;
import java.awt.event.*;
import java.awt.image.*;
import java.awt.*;
import java.net.URL;

import javax.swing.*;
import javax.swing.event.*;

import br.com.r4j.commons.util.*;
import br.com.r4j.commons.file.*;
import br.com.r4j.gui.*;
import br.com.r4j.configurator.*;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;


/**
 *
 */
public class OpenFileAction extends AbstractAction
{
	private static Log log = LogFactory.getLog(OpenFileAction.class.getName());

	public static final int IMAGE_LIST = 1;

	private List listFilter = null;
	private List listFilterDesc = null;
	private String strButtonLabel = null;
	private int accId = -1;


	public OpenImageAction(String strName)
	{
		super(strName);
		strButtonLabel = strName;
		listFilter = new ArrayList();
		listFilterDesc = new ArrayList();
	}


	public OpenImageAction(String strName, String strButtonLabel, List listFilter, List listFilterDesc)
	{
		super(strName);
		this.strButtonLabel = strButtonLabel;
		this.listFilter = listFilter;
		this.listFilterDesc = listFilterDesc;
	}


	public void setAccessory(int accId)
	{
		this.accId = accId;
	}


	public void actionPerformed(ActionEvent e)
	{
		try
		{
			FileChooserWindow fcwPathGenerator = new FileChooserWindow("Abrir", null, true);

			Iterator itFilters = listFilter.iterator();
			Iterator itFilterDescs = listFilterDesc.iterator();
			while (itFilters.hasNext())
			{
				String strFilter = (String) itFilters.next();
				String strFilterName = (String) itFilterDescs.next();

				GenericFilters ffRet = new GenericFilters(strFilter, strFilterName);
				ffRet.setExtensionListInDescription(true);
				fcwPathGenerator.addChoosableFileFilter(ffRet);
			}

			if (Actions.currentDir != null)
				fcwPathGenerator.setCurrentDirectory(Actions.currentDir);

			switch (accId)
			{
				case IMAGE_LIST:
				{
					fcwPathGenerator.setAccessory(new ImagePreview(fcwPathGenerator));
					break;
				}
				default:
				{
					break;
				}
			}
			Actions.currentDir = fcwPathGenerator.getCurrentDirectory();
			String strPath = fcwPathGenerator.getFileName();
			if (strPath != null)
			{
				Image imgLoad = ImageUtil.loadImage(strPath);
				BufferedImage buffImg = null;
				if (imgLoad instanceof BufferedImage)
					buffImg = (BufferedImage) imgLoad;
				else
					buffImg = ImageUtil.convert2BufferedImage(imgLoad, BufferedImage.TYPE_INT_RGB);
				log.debug("OpenImageAction:actionPerformed:buffImg = " + buffImg);
				imMan.setImage(buffImg);
			}
		}
		catch (Exception exc)
		{
			log.debug("OpenImageAction:actionPerformed:error", exc);
			JOptionPane.showMessageDialog(null, "Não foi possível abrir a imagem.");
		}
	}
}

}
