package br.com.r4j.research.image.sequence.featurematch.vline.test;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import java.io.IOException;
import java.io.File;
import java.awt.*;
import java.util.*;
import java.awt.image.*;
import br.com.r4j.image.*;
import br.com.r4j.commons.util.*;
import br.com.r4j.image.operation.threebandpacked.*;
import br.com.r4j.image.operation.threebandpacked.morphology.*;
import br.com.r4j.image.operation.threebandpacked.colorspace.*;
import br.com.r4j.math.*;
import br.com.r4j.research.image.sequence.featurematch.vline.*;

import br.com.r4j.research.*;
import br.com.r4j.research.vline.*;

import br.com.r4j.configurator.*;
import br.com.r4j.research.image.sequence.*;

import JSci.maths.*;



public class VLineMatcherOneImageRunner
{
	private static Log log = LogFactory.getLog(VLineMatcherOneImageRunner.class.getName());

	private VLineMatcherOneInputImageOp matcherCaller = null;

	public String strImgInputName = null;
	public String strImgOutputName = null;

	public VLineMatcherOneImageRunner()
	{
	}


	public void run()
	{
		matcherCaller = new VLineMatcherOneInputImageOp();

		BufferedImage buffImg = ImageUtil.convert2PackedBufferedImage(ImageUtil.loadImage(strImgInputName), BufferedImage.TYPE_INT_RGB);
		int [] imgData = ImageUtil.getThreeBandPackedData(buffImg);
		int [] outData = new int[imgData.length];
		int width = buffImg.getWidth();
		int height = buffImg.getHeight();

		matcherCaller.operate(imgData, outData, width, height);

		ImageUtil.saveImageJPEG(ImageUtil.createBufferedImage(outData, width, height, BufferedImage.TYPE_INT_RGB), strImgOutputName);
	}


	public static void main(String [] args)
	{
		try
		{
			if (args.length > 0)
				PlainConfigurator.createConfigurator(new File(args[0]));
			else
				PlainConfigurator.createConfigurator(new File("conf/conf.xml"));
		}
		catch (ConfiguratorException e)
		{
			e.printStackTrace();
		}
		catch (IOException e)
		{
			e.printStackTrace();
		}

		PropertiesHolder propHldr = Configurator.getPropsHolder();
//*
		VLineMatcherOneImageRunner matcherRunner = new VLineMatcherOneImageRunner();
		matcherRunner.strImgInputName = propHldr.getStringProperty("one_image/file");
		matcherRunner.strImgOutputName = propHldr.getStringProperty("one_image/output");
		matcherRunner.run();
//*/
	}

}
